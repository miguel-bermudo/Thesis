%!PS-Adobe-3.0 EPSF-3.0
%%Title: 
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 4/14/2023 20:24:57
%%For: Agu
%%BoundingBox: 0 0 194 189
%%Pages: 1
%%Orientation: Portrait
%%PageOrder: Ascend
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: () (52.3) 320
%%LanguageLevel: 1
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 0 0 194 189
%%ViewingOrientation: 1 0 0 1
%%EndDefaults

%%BeginProlog
%%BeginResource: file Pscript_WinNT_VMErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if initgraphics courier setfont lmargin 720 moveto errorname
(VMerror)eq{version cvi 2016 ge{userdict/ehsave known{clear userdict/ehsave get
restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}if}if systemdict
/showpage get exec(%%[ Error: )print errorname =print(; OffendingCommand: )
print/command load =print( ]%%)= flush}if end end end}dup 0 systemdict put dup
4 $brkpage put bind readonly put/currentpacking where{pop/setpacking where{pop
oldpack setpacking}if}if
%%EndResource
%%BeginProcSet: Pscript_Res_Emul 5.0 0
/defineresource where{pop}{userdict begin/defineresource{userdict/Resources 2
copy known{get begin}{15 dict dup begin put}ifelse exch readonly exch
currentdict 1 index known not{dup 30 dict def}if load 3 -1 roll 2 index put
end}bind readonly def/findresource{userdict/Resources get exch get exch get}
bind readonly def/resourceforall{pop pop pop pop}bind readonly def
/resourcestatus{userdict/Resources 2 copy known{get exch 2 copy known{get exch
known{0 -1 true}{false}ifelse}{pop pop pop false}ifelse}{pop pop pop pop false}
ifelse}bind readonly def end}ifelse
%%EndProcSet
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(La impresora no tiene suficiente memoria disponible para este trabajo.)100 500
(Realice una de las siguientes operaciones e intente imprimir de nuevo:)100 485
(Escoja "Optimizar para portabilidad" como formato de salida.)115 470
(En el panel Configuración de dispositivo, compruebe que "Memoria PostScript disponible" tiene el valor correcto.)
115 455(Reduzca el número de fuentes del documento.)115 440
(Imprima el documento por partes.)115 425 12/Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}bind def end
version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get def}ifelse
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L1 5.0 0
/rf{N rp L}b/fx{1 1 dtransform @ 0 ge{1 sub 1}{1 add -0.25}? 3 -1 $ @ 0 ge{1
sub 1}{1 add -0.25}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs{N rp C K}b/rc{N rp clip N}b/UtilsInit{}b/setcolorspace{!}b
/scol{[/setgray/setrgbcolor/setcolor/setcmykcolor/setcolor/setgray]~ get cvx
exec}b/colspRefresh{}b/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo
{/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
1 setlinecap 1 setlinejoin
/mysetup [ 72 600 V 0 0 -72 600 V 0 189.07086 ] def 
%%EndSetup

%%Page: 1 1
%%PageBoundingBox: 0 0 194 189
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_GdiObject 5.0 0
/SavedCTM null d/CTMsave{/SavedCTM SavedCTM currentmatrix d}b/CTMrestore
{SavedCTM setmatrix}b/mp null d/ADO_mxRot null d/GDIHMatrix null d
/GDIHPatternDict 22 dict d GDIHPatternDict `/PatternType 1 d/PaintType 2 d/Reps
L2?{1}{5}? d/XStep 8 Reps mul d/YStep XStep d/BBox[0 0 XStep YStep]d/TilingType
1 d/PaintProc{` 1 Lw[]0 sd PaintData , exec E}b/FGnd null d/BGnd null d
/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b/HS_BDiagonal
{biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep XStep YStep
gt{XStep}{YStep}? d/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8 Reps mul + K}b
/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag{Reps{0 0 M
MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps mul + 0 YStep
M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M MaxXYStep @ neg - 0 8
+}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E/makehatch{4 -2 $/yOrg ~ d
/xOrg ~ d GDIHPatternDict/PaintData 3 -1 $ put CTMsave GDIHMatrix setmatrix
GDIHPatternDict matrix xOrg yOrg + mp CTMrestore ~ U ~ 2 ^ put}b/h0{/h0
/HS_Horizontal makehatch}b/h1{/h1/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal
makehatch}b/h3{/h3/HS_BDiagonal makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5
/HS_DiagCross makehatch}b/GDIBWPatternMx null d/pfprep{save 8 1 $
/PatternOfTheDay 8 1 $ GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/yExt
~ d/Width ~ d/BGnd ~ d/FGnd ~ d/Height yExt RepsV mul d/mx[Width 0 0 Height 0
0]d E build_pattern ~ !}b/pfbf{/fEOFill ~ d pfprep hbf fEOFill{O}{L}? restore}b
/GraphInit{GDIHMatrix null eq{/SavedCTM matrix d : ADO_mxRot concat 0 0 snap +
: 0.48 @ GDIHPatternDict ` YStep mul ~ XStep mul ~ nonzero_dsnap YStep V ~
XStep V ~ E +S/GDIHMatrix matrix currentmatrix readonly d ; : 0.24 -0.24 +S
GDIBWPatternDict ` Width Height E nonzero_dsnap +S/GDIBWPatternMx matrix
currentmatrix readonly d ; ;}if}b
%%EndResource
%%BeginResource: file Pscript_Win_GdiObject_L1 5.0 0
/GDIBWPatternDict 25 dict @ `/PatternType 1 d/PaintType 2 d/RepsV 6 d/RepsH 5 d
/BBox[0 0 RepsH 1]d/TilingType 1 d/XStep 1 d/YStep 1 d/Height 8 RepsV mul d
/Width 8 d/mx[Width 0 0 Height neg 0 Height]d/FGnd null d/BGnd null d
/SetBGndFGnd{}b/PaintProc{` SetBGndFGnd RepsH{Width Height F mx PaintData
imagemask Width 0 +}repeat E}b E d/GDIpattfill{@ ` BGnd null ne PaintType 2 eq
and{: BGnd aload ! scol fEOFill{O}{L}? ; FGnd aload ! U/iCol 2 ^ put @ 0 eq{!
2}{@ 1 eq ~ 2 eq or{4}{5}?}? -1 $}if E @ patterncalc : 4 ^/PaintType get 2 eq
{iCol 0 eq{6 -1 $}if iCol 1 eq iCol 2 eq or{8 -3 $}if iCol 3 eq iCol 4 eq or{9
-4 $}if iCol scol}if fEOFill{eoclip}{clip}? N patternfill ; N}b/hbf
{GDIpattfill}b/hfMain{/fEOFill ~ d ~/iCol ~ d GDIpattfill}b/hf{: hfMain ;}b
/mpstr 1 string d/mp{~ @ length 12 add dict copy `/PatternCTM matrix
currentmatrix d/PatternMatrix ~ d/PatWidth XStep mpstr length mul d/PatHeight
YStep d/FontType 3 d/Encoding 256 array d 3 string 0 1 255{Encoding ~ @ 3 ^ cvs
cvn put}for !/FontMatrix matrix d/FontBBox BBox d/BuildChar{! @ ` XStep 0
FontBBox aload ! setcachedevice/PaintProc , E : exec ;}b & E ~ @ 3 -1 $
definefont}b/build_pattern{: GDIBWPatternDict ` Width Height E dsnap +S
/GDIBWPatternMx matrix currentmatrix d ; CTMsave GDIBWPatternMx setmatrix
GDIBWPatternDict @ ` xOrg yOrg E matrix + mp CTMrestore}b/patterncalc{` :
PatternCTM setmatrix PatternMatrix concat BBox aload ! ! ! + pathbbox ;
PatHeight V ceiling 4 1 $ PatWidth V ceiling 4 1 $ PatHeight V floor 4 1 $
PatWidth V floor 4 1 $ 2 ^ sub cvi abs ~ 3 ^ sub cvi abs ~ 4 2 $ PatHeight mul
~ PatWidth mul ~ E}b/patternfill{5 -1 $ @ ` Ji PatternCTM setmatrix
PatternMatrix concat 0 2 ^ 2 ^ M 0 1 mpstr length 1 sub{1 ^ mpstr 3 1 $ put}for
! 2 ^{currentpoint 5 ^{mpstr S}repeat YStep add M}repeat ! ! ! ! E}b/pbf{: 14
dict `/fGray ~ d/fEOFill ~ d/yOrg ~ d/xOrg ~ d/PaintData ~ d/OutputBPP ~ d
/Height ~ d/Width ~ d/mx xOrg yOrg matrix + d fGray{/PaintProc{` Width Height
OutputBPP mx PaintData image E}b}{/PaintProc{` Width Height 8 mx PaintData F
OutputBPP 8 idiv colorimage E}b}? pathbbox fEOFill{eoclip}{clip}?/Top ~ d/Right
~ d/Bottom ~ d/Left ~ d Top Height neg Bottom 1 sub{Left Width Right 1 sub{1 ^
2 copy + & PaintProc neg ~ neg ~ +}bind for !}bind for E ;}b
%%EndResource
end reinitialize
N 843 661 M 799 648 748 688 730 750 -c 713 812 735 872 780 885 -c 825 898 876 858 893 796 -c 911 734 888 674 843 661 -c C 
0.996 1 1 1 scol  O 0 0 0 1 scol 0 Lj 2 Lc 2 Lm 32 Lw solid N 843 661 M 799 648 748 688 730 750 -c 713 812 735 872 780 885 -c 825 898 876 858 893 796 -c 911 734 888 674 843 661 -c : 0.398 0.398 +S K 
; N 1341 785 M 1295 772 1245 812 1227 874 -c 1209 936 1232 996 1277 1009 -c 1322 1022 1373 982 1390 920 -c 1408 858 1385 798 1341 785 -c C 
0.996 1 1 1 scol  O 0 0 0 1 scol N 1341 785 M 1295 772 1245 812 1227 874 -c 1209 936 1232 996 1277 1009 -c 1322 1022 1373 982 1390 920 -c 1408 858 1385 798 1341 785 -c : 0.398 0.398 +S K 
; 1 Lj 0 Lc 10 Lm 1 Lw N 297 380 M 288 448 I 279 447 I 289 379 I 297 380 I C 
283 482 M 274 550 I 265 549 I 275 481 I 283 482 I C 
269 583 M 259 651 I 251 650 I 261 582 I 269 583 I C 
255 685 M 245 753 I 237 752 I 246 684 I 255 685 I C 
240 786 M 231 854 I 222 853 I 232 785 I 240 786 I C 
226 888 M 216 956 I 208 955 I 217 887 I 226 888 I C 
212 989 M 202 1057 I 194 1056 I 203 988 I 212 989 I C 
197 1091 M 188 1159 I 179 1158 I 189 1090 I 197 1091 I C 
183 1192 M 173 1260 I 165 1259 I 175 1191 I 183 1192 I C 
169 1294 M 159 1362 I 151 1361 I 160 1293 I 169 1294 I C 
154 1395 M 147 1445 I 142 1440 I 161 1437 I 162 1445 I 138 1449 I 146 1394 I 154 1395 I C 
194 1431 M 261 1419 I 263 1427 I 196 1439 I 194 1431 I C 
295 1413 M 362 1401 I 364 1410 I 297 1421 I 295 1413 I C 
396 1395 M 463 1383 I 465 1392 I 398 1404 I 396 1395 I C 
497 1377 M 564 1366 I 566 1374 I 498 1386 I 497 1377 I C 
598 1360 M 665 1348 I 667 1356 I 599 1368 I 598 1360 I C 
699 1342 M 766 1330 I 767 1339 I 700 1350 I 699 1342 I C 
800 1324 M 867 1312 I 868 1321 I 801 1333 I 800 1324 I C 
901 1306 M 968 1295 I 970 1303 I 902 1315 I 901 1306 I C 
1002 1289 M 1069 1277 I 1070 1285 I 1003 1297 I 1002 1289 I C 
1102 1271 M 1170 1259 I 1171 1267 I 1104 1279 I 1102 1271 I C 
1203 1253 M 1271 1241 I 1272 1249 I 1205 1261 I 1203 1253 I C 
1304 1235 M 1371 1223 I 1373 1232 I 1306 1244 I 1304 1235 I C 
1405 1217 M 1454 1209 I 1450 1212 I 1453 1193 I 1461 1194 I 1458 1217 I 1407 1226 I 1405 1217 I C 
1458 1160 M 1467 1092 I 1476 1093 I 1466 1161 I 1458 1160 I C 
1472 1058 M 1482 990 I 1490 991 I 1480 1059 I 1472 1058 I C 
1486 957 M 1496 889 I 1504 890 I 1495 958 I 1486 957 I C 
1500 855 M 1510 787 I 1518 788 I 1509 856 I 1500 855 I C 
1515 754 M 1524 686 I 1533 687 I 1523 755 I 1515 754 I C 
1529 652 M 1539 584 I 1547 585 I 1538 653 I 1529 652 I C 
1544 551 M 1553 483 I 1562 484 I 1552 552 I 1544 551 I C 
1558 449 M 1568 381 I 1576 382 I 1566 450 I 1558 449 I C 
1572 348 M 1582 280 I 1590 281 I 1581 349 I 1572 348 I C 
1586 246 M 1596 178 I 1604 179 I 1595 247 I 1586 246 I C 
1602 153 M 1534 165 I 1533 157 I 1600 145 I 1602 153 I C 
1501 171 M 1434 183 I 1432 175 I 1500 163 I 1501 171 I C 
1400 189 M 1333 201 I 1331 193 I 1399 181 I 1400 189 I C 
1299 207 M 1232 219 I 1230 210 I 1297 199 I 1299 207 I C 
1198 225 M 1131 237 I 1129 228 I 1197 216 I 1198 225 I C 
1097 243 M 1030 254 I 1028 246 I 1096 234 I 1097 243 I C 
996 260 M 929 272 I 928 264 I 995 252 I 996 260 I C 
896 278 M 828 290 I 827 282 I 894 270 I 896 278 I C 
795 296 M 727 308 I 726 300 I 793 288 I 795 296 I C 
693 314 M 626 326 I 625 317 I 692 305 I 693 314 I C 
592 332 M 525 344 I 524 335 I 591 323 I 592 332 I C 
492 349 M 424 361 I 423 353 I 490 341 I 492 349 I C 
391 367 M 323 379 I 322 370 I 389 359 I 391 367 I C 
:  L ; : 0.398 0.398 +S K 
; 0.273 0.445 0.77 1 scol 1 Lc 37 Lw N 144 1442 M 448 219 I : 0.398 0.398 +S K 
; N 466 298 M 448 219 I 395 281 I : 0.398 0.398 +S K 
; N 145 1441 M 942 330 I : 0.398 0.398 +S K 
; N 929 411 M 942 330 I 870 368 I : 0.398 0.398 +S K 
; 0 0 0 1 scol 27 Lw N 1596 1444 M 15 1444 I : 0.398 0.398 +S K 
; N 143 15 M 143 1565 I : 0.398 0.398 +S K 
; N 307 659 M 307 652 I 311 652 314 652 317 651 -c 319 649 320 647 321 644 -c 322 641 322 638 321 636 -c 320 634 318 633 315 632 -c 313 631 312 632 310 633 -c 309 634 308 636 305 639 -c 302 644 300 648 298 649 -c 297 651 295 652 292 652 -c 290 653 287 653 285 652 -c 281 651 277 649 275 645 -c 273 641 273 637 275 632 -c 275 629 277 627 278 625 -c 280 622 282 621 284 620 -c 287 619 289 619 293 620 -c 293 627 I 287 626 283 629 282 634 -c 281 637 281 639 282 641 -c 283 643 284 644 286 645 -c 288 645 289 645 291 644 -c 292 643 293 641 296 637 -c 299 632 302 628 303 627 -c 305 625 307 624 309 624 -c 311 623 314 624 316 624 -c 321 626 325 628 327 632 -c 329 636 329 641 328 646 -c 325 656 318 661 307 659 -c C 
308 613 M 299 611 293 607 290 602 -c 286 597 285 592 287 586 -c 288 581 292 577 297 574 -c 303 571 310 571 318 573 -c 327 576 334 580 337 585 -c 341 589 342 595 340 601 -c 339 606 335 610 330 613 -c 324 615 317 615 308 613 -c C 
310 606 M 317 608 322 608 326 606 -c 330 605 332 602 333 599 -c 334 595 333 592 331 589 -c 328 585 323 583 317 581 -c 310 579 305 579 301 581 -c 297 582 295 585 294 588 -c 293 592 294 595 296 598 -c 299 601 303 604 310 606 -c C 
354 547 M 346 545 I 349 547 350 549 351 552 -c 352 555 352 557 351 560 -c 350 563 349 566 346 568 -c 344 570 341 571 338 571 -c 335 571 331 570 327 569 -c 295 561 I 297 553 I 325 561 I 331 563 334 563 336 563 -c 338 563 340 562 341 561 -c 343 560 344 559 344 557 -c 345 553 344 550 342 547 -c 340 545 336 543 329 541 -c 302 533 I 304 526 I 356 540 I C 
358 531 M 307 517 I 308 511 I 316 513 I 313 510 311 508 310 506 -c 309 505 309 503 309 501 -c 310 499 312 497 314 495 -c 322 499 I 320 501 319 502 319 504 -c 318 505 318 507 319 509 -c 320 510 321 511 323 512 -c 326 514 329 515 333 517 -c 360 524 I C 
355 467 M 358 461 I 364 463 368 466 370 470 -c 372 475 373 479 372 483 -c 370 489 367 493 362 495 -c 356 497 349 497 340 495 -c 331 493 325 489 321 484 -c 318 479 317 474 318 469 -c 319 464 322 461 325 458 -c 329 456 333 456 339 456 -c 338 463 I 335 463 332 464 330 465 -c 327 466 326 468 325 470 -c 325 474 325 477 328 480 -c 330 483 335 486 342 488 -c 349 490 354 490 358 489 -c 362 487 364 485 365 481 -c 366 479 365 476 364 473 -c 362 471 359 469 355 467 -c C 
368 429 M 370 422 I 376 425 379 428 381 432 -c 383 436 383 441 382 445 -c 380 451 377 456 372 458 -c 366 461 359 461 350 458 -c 342 456 335 452 331 447 -c 328 442 327 437 328 431 -c 330 426 333 422 339 420 -c 344 417 352 417 360 419 -c 362 420 I 354 452 I 360 453 365 452 368 451 -c 372 449 374 447 375 443 -c 376 438 374 433 368 429 -c C 
347 449 M 353 426 I 349 425 345 425 343 426 -c 339 427 336 430 335 433 -c 335 436 335 440 337 442 -c 339 446 343 448 347 449 -c C 
 L N 513 849 M 520 853 I 520 855 519 856 518 858 -c 516 860 514 861 513 862 -c 511 863 509 863 508 862 -c 506 862 503 860 498 856 -c 474 839 I 470 843 I 465 839 I 468 835 I 457 827 I 457 818 I 472 829 I 476 823 I 482 827 I 478 833 I 503 851 I 506 852 507 854 508 854 -c 510 854 510 853 512 852 -c 512 851 513 850 513 849 -c C 
536 819 M 537 823 537 826 536 829 -c 536 832 535 834 533 837 -c 531 840 528 843 524 843 -c 520 844 516 843 512 840 -c 510 838 508 836 507 834 -c 506 831 505 829 505 826 -c 506 824 506 820 509 816 -c 512 811 513 807 514 804 -c 512 802 I 509 800 506 800 504 800 -c 502 800 499 802 497 805 -c 495 808 494 810 494 812 -c 494 814 496 817 499 820 -c 494 825 I 490 821 487 817 487 813 -c 487 809 488 804 492 800 -c 494 796 497 793 500 792 -c 503 791 506 791 508 792 -c 510 793 514 795 518 798 -c 528 804 I 534 810 539 812 541 813 -c 543 814 545 815 547 816 -c 542 822 I 540 821 538 820 536 819 -c C 
520 808 M 519 811 518 815 515 820 -c 514 823 513 825 513 826 -c 513 828 513 829 514 830 -c 514 832 515 832 517 834 -c 519 835 521 836 523 835 -c 525 835 527 834 528 831 -c 530 829 531 827 531 824 -c 531 822 531 819 530 817 -c 528 815 526 812 522 810 -c C 
551 810 M 508 779 I 512 773 I 518 778 I 516 774 515 772 515 770 -c 515 768 515 766 516 765 -c 518 763 520 762 523 760 -c 528 768 I 526 768 525 769 524 771 -c 523 772 522 774 522 775 -c 523 777 524 778 525 780 -c 527 783 530 785 533 788 -c 556 804 I C 
569 792 M 574 788 I 576 789 579 789 581 789 -c 583 788 585 787 587 784 -c 588 782 590 779 589 777 -c 589 774 588 772 586 770 -c 585 768 582 766 577 762 -c 578 765 578 767 578 770 -c 578 772 577 774 575 776 -c 572 780 568 782 562 782 -c 556 783 549 780 542 776 -c 538 772 534 769 532 765 -c 529 761 528 757 528 754 -c 528 750 529 747 531 744 -c 533 742 534 741 537 740 -c 539 739 542 738 545 738 -c 540 735 I 544 729 I 581 756 I 588 760 592 764 594 768 -c 596 771 597 774 597 778 -c 597 781 595 785 593 788 -c 590 793 586 796 582 796 -c 577 797 573 796 569 792 -c C 
546 769 M 552 773 557 775 561 775 -c 565 775 568 774 570 771 -c 572 768 572 765 571 761 -c 570 758 566 754 561 750 -c 555 746 550 744 546 744 -c 542 744 539 746 537 748 -c 536 751 535 754 536 758 -c 538 762 541 765 546 769 -c C 
599 713 M 605 708 I 609 712 611 716 611 720 -c 612 725 611 729 607 733 -c 604 738 599 741 593 741 -c 587 742 580 739 573 734 -c 566 729 561 723 560 717 -c 558 711 559 706 562 701 -c 565 696 570 694 576 694 -c 582 694 589 696 596 701 -c 598 702 I 579 729 I 584 732 588 734 592 734 -c 596 733 599 732 601 729 -c 605 724 604 719 599 713 -c C 
573 724 M 588 704 I 584 702 580 701 577 701 -c 573 701 570 702 568 706 -c 566 708 566 711 566 715 -c 567 718 570 722 573 724 -c C 
625 693 M 632 696 I 631 698 631 700 629 702 -c 628 704 627 705 625 706 -c 623 706 621 706 619 706 -c 618 705 615 704 610 700 -c 585 683 I 582 687 I 576 683 I 580 678 I 569 671 I 569 662 I 584 672 I 588 666 I 594 671 I 590 677 I 615 695 I 617 696 619 697 620 698 -c 621 698 623 697 623 696 -c 624 695 625 694 625 693 -c C 
 L N 890 912 M 904 861 I 910 862 I 908 870 I 910 867 913 865 914 864 -c 916 863 918 863 919 864 -c 922 864 924 866 926 869 -c 921 876 I 920 874 918 873 917 873 -c 915 872 914 872 912 873 -c 910 874 909 875 908 877 -c 906 880 905 883 904 887 -c 897 914 I C 
948 910 M 954 913 I 952 918 948 921 944 923 -c 940 925 936 926 932 925 -c 926 923 921 919 919 914 -c 916 908 916 901 919 893 -c 921 884 925 877 930 874 -c 935 870 940 869 946 871 -c 951 872 955 876 958 881 -c 960 887 960 894 958 903 -c 957 905 I 926 897 I 924 902 924 907 926 911 -c 928 914 930 916 934 917 -c 939 919 944 916 948 910 -c C 
928 889 M 951 896 I 952 891 952 888 951 885 -c 950 881 947 879 944 878 -c 941 877 938 878 934 880 -c 932 882 929 885 928 889 -c C 
964 932 M 983 861 I 990 863 I 970 934 I C 
1011 938 M 1008 940 1005 941 1002 942 -c 1000 942 997 942 994 941 -c 990 940 986 938 984 935 -c 982 931 982 927 984 923 -c 984 920 986 917 988 915 -c 989 913 992 912 994 911 -c 996 911 1000 911 1004 911 -c 1010 912 1015 912 1018 912 -c 1018 909 I 1020 906 1020 903 1019 901 -c 1018 899 1015 897 1011 896 -c 1008 895 1005 895 1003 896 -c 1001 897 1000 899 998 903 -c 991 900 I 994 895 996 891 1000 890 -c 1004 888 1009 888 1014 889 -c 1019 891 1022 892 1024 895 -c 1026 897 1027 899 1027 902 -c 1027 905 1026 909 1025 913 -c 1022 925 I 1020 933 1019 938 1018 940 -c 1018 942 1018 945 1018 947 -c 1011 945 I 1011 943 1011 941 1011 938 -c C 
1016 919 M 1013 919 1009 919 1004 919 -c 1000 918 998 918 997 919 -c 995 919 994 920 993 921 -c 992 922 992 923 991 925 -c 990 927 991 929 992 931 -c 993 933 995 934 998 935 -c 1000 936 1002 936 1005 935 -c 1007 934 1009 933 1011 931 -c 1013 929 1014 926 1015 922 -c C 
1044 945 M 1042 953 I 1040 953 1038 953 1037 953 -c 1034 952 1032 951 1031 949 -c 1030 948 1029 947 1029 945 -c 1029 943 1030 939 1031 934 -c 1039 905 I 1034 903 I 1036 897 I 1041 898 I 1044 885 I 1053 882 I 1048 900 I 1055 902 I 1054 909 I 1046 907 I 1038 937 I 1037 939 1037 941 1037 942 -c 1038 943 1038 944 1040 945 -c 1041 945 1042 945 1044 945 -c C 
1067 895 M 1070 885 I 1076 887 I 1074 897 I C 
1050 955 M 1064 904 I 1071 906 I 1057 957 I C 
1067 933 M 1069 923 1073 917 1078 914 -c 1083 911 1088 909 1094 911 -c 1099 913 1104 916 1106 921 -c 1108 927 1109 934 1106 943 -c 1104 952 1100 958 1095 962 -c 1090 965 1085 966 1079 965 -c 1074 963 1070 959 1067 954 -c 1064 949 1064 941 1067 933 -c C 
1074 934 M 1072 941 1072 946 1074 950 -c 1075 954 1078 957 1081 957 -c 1085 958 1088 957 1091 955 -c 1094 952 1097 948 1099 941 -c 1101 935 1101 929 1099 925 -c 1098 921 1095 919 1092 918 -c 1088 917 1085 918 1082 921 -c 1078 923 1076 928 1074 934 -c C 
1112 972 M 1126 921 I 1133 923 I 1131 930 I 1133 927 1135 926 1138 925 -c 1141 924 1143 924 1146 925 -c 1148 926 1150 927 1152 928 -c 1154 930 1155 931 1156 933 -c 1157 935 1157 937 1157 939 -c 1157 942 1156 945 1155 950 -c 1146 981 I 1139 979 I 1148 948 I 1149 945 1149 942 1149 940 -c 1149 938 1148 936 1147 935 -c 1146 934 1145 933 1143 932 -c 1139 931 1136 932 1133 934 -c 1131 936 1129 940 1127 946 -c 1119 974 I C 
 L N 554 113 M 554 66 517 28 470 28 -c 423 28 385 66 385 113 -c 385 159 423 197 470 197 -c 517 197 554 159 554 113 -c C 
0.996 1 1 1 scol  O 0 0 0 1 scol 0 Lj 2 Lc 2 Lm 32 Lw N 554 113 M 554 66 517 28 470 28 -c 423 28 385 66 385 113 -c 385 159 423 197 470 197 -c 517 197 554 159 554 113 -c : 0.398 0.398 +S K 
; N 1075 233 M 1075 187 1037 149 990 149 -c 944 149 906 187 906 233 -c 906 280 944 318 990 318 -c 1037 318 1075 280 1075 233 -c C 
0.996 1 1 1 scol  O 0 0 0 1 scol N 1075 233 M 1075 187 1037 149 990 149 -c 944 149 906 187 906 233 -c 906 280 944 318 990 318 -c 1037 318 1075 280 1075 233 -c : 0.398 0.398 +S K 
; 1 Lj 0 Lc 10 Lm 1 Lw N 512 186 M 524 209 I 525 211 524 213 522 214 -c 520 215 518 215 516 213 -c 505 190 I 504 187 504 185 507 184 -c 509 183 511 184 512 186 -c C 
536 231 M 547 254 I 548 256 548 259 545 260 -c 543 261 541 260 540 258 -c 528 235 I 527 233 528 231 530 230 -c 532 229 534 229 536 231 -c C 
559 277 M 570 300 I 572 302 571 305 568 306 -c 566 307 564 306 563 304 -c 551 281 I 550 279 551 276 553 276 -c 555 274 558 275 559 277 -c C 
582 323 M 594 346 I 595 348 594 350 592 352 -c 590 352 587 352 586 350 -c 574 327 I 573 325 574 322 576 321 -c 578 320 581 321 582 323 -c C 
605 368 M 617 392 I 618 394 617 396 615 397 -c 613 398 611 397 609 395 -c 598 372 I 596 370 597 368 600 367 -c 602 366 604 366 605 368 -c C 
629 414 M 640 437 I 641 439 641 442 638 443 -c 636 444 634 443 633 441 -c 621 418 I 620 416 621 414 623 412 -c 625 411 627 412 629 414 -c C 
652 460 M 663 483 I 665 485 664 487 661 489 -c 659 490 657 489 656 487 -c 644 464 I 643 462 644 459 646 458 -c 648 457 651 458 652 460 -c C 
675 506 M 687 529 I 688 531 687 533 685 534 -c 683 535 680 535 679 532 -c 667 509 I 666 507 667 505 669 504 -c 671 503 674 503 675 506 -c C 
698 551 M 710 574 I 711 576 710 579 708 580 -c 706 581 703 580 702 578 -c 691 555 I 689 553 690 551 693 549 -c 695 548 697 549 698 551 -c C 
721 597 M 733 620 I 734 622 733 625 731 625 -c 729 627 727 626 725 624 -c 714 601 I 713 599 714 596 716 595 -c 718 594 720 595 721 597 -c C 
745 643 M 756 666 I 757 668 757 670 754 671 -c 752 672 750 672 749 670 -c 737 647 I 736 644 737 642 739 641 -c 741 640 743 641 745 643 -c C 
768 688 M 779 711 I 781 713 780 716 777 717 -c 775 718 773 717 772 715 -c 760 692 I 759 690 760 688 762 686 -c 764 686 767 686 768 688 -c C 
791 734 M 803 757 I 804 759 803 762 801 763 -c 799 764 796 763 795 761 -c 783 738 I 782 736 783 733 785 732 -c 787 731 790 732 791 734 -c C 
:  L ; : 0.398 0.398 +S K 
; 1 Lc 21 Lw N 755 738 M 809 778 I 808 711 I : 0.398 0.398 +S K 
; 0 Lc 1 Lw N 1020 312 M 1032 335 I 1033 337 1032 340 1030 341 -c 1028 342 1025 341 1024 339 -c 1012 316 I 1011 314 1012 312 1014 310 -c 1016 309 1019 310 1020 312 -c C 
1043 358 M 1055 381 I 1056 383 1055 386 1053 386 -c 1051 388 1048 387 1047 385 -c 1036 362 I 1034 360 1035 357 1038 356 -c 1040 355 1042 356 1043 358 -c C 
1066 404 M 1078 426 I 1079 428 1078 431 1076 432 -c 1074 433 1072 432 1070 430 -c 1059 408 I 1058 405 1058 403 1061 402 -c 1063 401 1065 402 1066 404 -c C 
1090 449 M 1101 472 I 1102 474 1102 477 1099 478 -c 1097 479 1095 478 1094 476 -c 1082 453 I 1081 451 1082 448 1084 447 -c 1086 446 1088 447 1090 449 -c C 
1113 495 M 1124 518 I 1126 520 1125 523 1122 524 -c 1120 525 1118 524 1117 522 -c 1105 499 I 1104 497 1105 494 1107 493 -c 1109 492 1112 493 1113 495 -c C 
1136 541 M 1148 563 I 1149 566 1148 568 1146 569 -c 1144 570 1141 569 1140 567 -c 1129 545 I 1127 543 1128 540 1131 539 -c 1133 538 1135 539 1136 541 -c C 
1159 586 M 1171 609 I 1172 611 1171 614 1169 615 -c 1167 616 1165 615 1163 613 -c 1152 590 I 1151 588 1151 585 1154 585 -c 1156 583 1158 584 1159 586 -c C 
1183 632 M 1194 655 I 1195 657 1195 659 1192 661 -c 1190 662 1188 661 1187 659 -c 1175 636 I 1174 634 1175 631 1177 630 -c 1179 629 1181 630 1183 632 -c C 
1206 678 M 1217 701 I 1219 703 1218 705 1215 706 -c 1213 708 1211 706 1210 704 -c 1198 682 I 1197 680 1198 677 1200 676 -c 1202 675 1205 676 1206 678 -c C 
1229 724 M 1241 746 I 1242 748 1241 751 1239 752 -c 1237 753 1234 752 1233 750 -c 1221 727 I 1220 725 1221 723 1223 722 -c 1225 720 1228 721 1229 724 -c C 
1252 769 M 1264 792 I 1265 794 1264 796 1262 798 -c 1260 799 1257 798 1256 796 -c 1245 773 I 1243 771 1244 768 1247 767 -c 1249 766 1251 767 1252 769 -c C 
1275 815 M 1287 838 I 1288 840 1287 842 1285 843 -c 1283 844 1281 844 1279 842 -c 1268 818 I 1267 816 1268 814 1270 813 -c 1272 812 1274 813 1275 815 -c C 
1299 861 M 1310 883 I 1311 885 1311 888 1308 889 -c 1306 890 1304 889 1303 887 -c 1291 865 I 1290 862 1291 860 1293 858 -c 1295 858 1297 858 1299 861 -c C 
:  L ; : 0.398 0.398 +S K 
; 1 Lc 21 Lw N 1262 865 M 1316 905 I 1316 837 I : 0.398 0.398 +S K 
; 0.773 0.352 0.066 1 scol 37 Lw N 923 802 M 1206 873 I : 0.398 0.398 +S K 
; N 1126 891 M 1206 873 I 1144 820 I : 0.398 0.398 +S K 
; 0 0 0 1 scol 11 dict begin
/FontName /TT202o00 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
AddFontInfoBegin
AddFontInfo
AddFontInfoEnd
currentdict
end

currentfile eexec
9e67edc6f3ddb54d987dfb0ad4392351758f10eff40ef287a1387512b853
046f6e589e2c97d48fdb38d54b68757f1dc48a239a5da408c2bfd473eac0
3ab6b0025b87770e5f3b06904c282a51ee189ce871258447b47d83c5fad2
326aa26e4c7f0ff21a841a463c859f102729802bbfa6ac0c2766f6b09317
a247f37b339b99b7588bee2e861ed9de7a8990c512001ce21da50f4516f7
553cc5df31ac42402c2b4e2b106773ccdac45a8dee89d3d35ce4f9afb022
79592359efd5293f35df57216c84236a1347e922a61c45691be2c137b65f
08f4b3113b88e58dce4bd559387db7a00fe16460e5ab8fc835ea6ed9b938
610bff26bc7ddabb1ac18e075c76fcf9ee4daa7bf67745a5b8a34ffc0985
b0dcc0bdc86967ae51008ed6680641efc5f0a8608898a313247eb231bad3
2c02bce3cbf1e6b006f8634aa5f1855fe9e85cbb20d3478e893fdc0bf386
cf80b704acc660f8f266a517907b75bad0158513369d8bebc071bd1f635f
6df509de61527d9f36b8b4458a17953dcaec1741b60d9c3fd6c5036a5230
0542bddbcf5573205076595dcbe72f0ba711c0d237e907b265e49cc3e0be
1ede5019473558028a94c172bd7b672e26acab018df11865efdc80149ce5
312bfcef8b1261540efd797febecd9f666dc4f33ca6816eb429e9d6dc1f9
566e387603aafc1833c7423caf3a86857110ead470143a0d10266e98d12c
d07018427d56049bb45d8cd77b55373d717feb15afa4ab80446ae623e3b8
0c86de77a7985c2d77135796549e93a10000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/TT202o00 findfont /Encoding get
dup 1 /s put
pop
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{~ ! ~ ! 4 -1 $ ! findfont 2 ^ ~
definefont fM @ @ 4 6 -1 $ neg put 5 0 put 90 matrix R matrix concatmatrix
makefont Pscript_Windows_Font 3 1 $ put}b/mF_TTF_V{3{~ !}repeat 3 -1 $ !
findfont 1 ^ ~ definefont Pscript_Windows_Font 3 1 $ put}b/UmF{L2?
{Pscript_Windows_Font ~ undef}{!}?}b/UmF42{@ findfont/FDepVector get{/FontName
get undefinefont}forall undefinefont}b
%%EndResource
end reinitialize
F /F0 0 /0 F /TT202o00 mF 
/F0S66YFFFFFF99 F0 [102.477 0 0 -102.5 0 0 ] mFS
F0S66YFFFFFF99 Ji 
763 970 M <01>S 
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_T3Hdr 5.0 0
{version cvi 2016 ge{32/FontType resourcestatus{pop pop true}{false}ifelse}
{false}ifelse}exec/Is2016andT32? exch def/T32DefSBCMap{/CIDInit/ProcSet
findresource begin 10 dict begin begincmap/CIDSystemInfo 3 dict dup begin
/Registry(Adobe)def/Ordering(Identity1)def/Supplement 0 def end def/CMapType 0
def/WMode 0 def 1 begincodespacerange<00><ff>endcodespacerange 1 begincidrange
<00><ff>0 endcidrange endcmap/DrvSBCMap currentdict/CMap defineresource pop end
end}bind def Is2016andT32?{T32DefSBCMap}def/T32RsrcBegin{Is2016andT32?{
/BitmapFontInit/ProcSet findresource begin}if}bind def/T32RsrcEnd{Is2016andT32?
{end}if}bind def/AddT32Char{6 1 roll 0 get 7 1 roll pop pop 5 1 roll pop
findfont/TT32R get addglyph}bind def/AddT3Char{findfont dup 5 2 roll 1 index
length 0 gt{cvx 1 index exch 4 exch put dup(imagemask)cvx cvn 5 exch put cvx}
{pop cvx}ifelse 3 -1 roll/CharProcs get 3 1 roll put dup/Encoding get 5 -1 roll
4 index put/Metrics get 3 1 roll put}bind def/AddT3T32Char Is2016andT32?{
/AddT32Char}{/AddT3Char}ifelse load def/GreNewFontT32{5 dict begin exch
/FontMatrix exch def exch/FontBBox exch def exch pop exch pop/CIDFontType 4 def
dup currentdict end/CIDFont defineresource 3 -1 roll dup/DrvSBCMap dup/CMap
resourcestatus{pop pop}{T32DefSBCMap}ifelse 5 -1 roll[exch]composefont dup
length dict copy dup/FID undef begin exch/TT32R exch def currentdict end
definefont/BitmapFontInit/ProcSet findresource begin/TT32R get[14 0 0 0 0 0]<>0
4 -1 roll addglyph end}bind def/GreNewFontT3{11 dict begin pop/FontType 3 def
/FontMatrix exch def/FontBBox exch def/Encoding exch def/CharProcs 257 dict def
CharProcs/.notdef{}put/Metrics 257 dict def Metrics/.notdef 3 -1 roll put
AddFontInfoBegin AddFontInfo AddFontInfoEnd/BuildChar{userdict begin/char exch
def dup/charname exch/Encoding get char get def dup/Metrics get charname 2 copy
known{get aload pop}{pop/.notdef get aload pop}ifelse setcachedevice begin
Encoding char get CharProcs exch 2 copy known{get}{pop/.notdef get}ifelse end
exec end}def currentdict end definefont pop}bind def/GreNewFont{Is2016andT32?
{GreNewFontT32}{GreNewFontT3}ifelse}bind def/UDF3{Is2016andT32?{/BitmapFontInit
/ProcSet findresource begin dup/CIDFont findresource removeall/CIDFont
undefineresource undefinefont end}{pop UDF}ifelse}bind def
%%EndResource
end reinitialize
/TT114b00
[70 0 0 0 0 0 ] 
 256 array 0 1 255 {1 index exch /.notdef put} for 
[0 0 0 0 ] 
[1 70 div 0 0 -1 70 div 0 0 ]
/__TT114b00
GreNewFont
T32RsrcBegin

1
/uni22A5 [46 0 5 -44 42 0 ] 
/uni22A5 [37 44 true [1 0 0 1 -5 44 ]  0 0]
[<0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
0000f80000
fffffffff8
fffffffff8
fffffffff8
fffffffff8
fffffffff8
>
 ]
/TT114b00 AddT3T32Char
T32RsrcEnd
F /F1 0 /0 F /TT114b00 mF 
/F1S46 F1 [70.313 0 0 -70.313 0 0 ] mFS
F1S46 Ji 
805 985 M <01>S 

currentfile eexec
9e67edc6b841302ace4c9312423abad81659a9b21c2dc6d34dcfe69887be
1f16a31eb84955ddd48b5c52d05e5f7d1efb525015b6bd3ad3a2de2dca67
571e134d5dcf8bf7a7e0d9583469bfc459c58dfcf6b9dc435373ca2b3200
4571b339f51cab719d38dd625127d233ec38ab5f6d41f9dc175865b544b2
4e32f2cce1f9e2dd2b7b5051506b5070525f5e39101e115e131c4cf242ac
3eaaec20d6339be5c97035148900b10ad0c3db98bd2093c0d1092cc38836
e80213d84c170008e323efa64c6315dc9cb513ce4f857f5aea82995710b6
3d4722919fb133760000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/TT202o00 findfont /Encoding get
dup 2 /t put
pop
F0S66YFFFFFF99 Ji 
1301 1114 M <02>S 
F1S46 Ji 
1324 1128 M <01>S 
N 1490 254 M 1468 204 I 1476 203 I 1488 232 I 1492 243 I 1492 231 I 1494 200 I 1502 199 I 1513 228 I 1517 237 I 1518 227 I 1520 195 I 1527 194 I 1522 249 I 1515 250 I 1503 220 I 1500 211 I 1498 253 I C 
 L N 1541 253 M 1536 219 I 1540 219 I 1541 224 I 1542 221 1542 219 1543 219 -c 1544 217 1545 217 1546 217 -c 1548 217 1549 217 1551 218 -c 1550 223 I 1549 223 1548 223 1547 223 -c 1546 223 1545 223 1544 224 -c 1544 225 1543 226 1543 227 -c 1543 230 1543 232 1543 235 -c 1546 253 I C 
 L LH
%%PageTrailer

%%Trailer
%%DocumentNeededResources: 
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_VMErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L1 5.0 0
%%+ procset Pscript_Win_GdiObject 5.0 0
%%+ procset Pscript_Win_GdiObject_L1 5.0 0
%%+ procset Pscript_Text 5.0 0
%%+ procset Pscript_T3Hdr 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
%%EOF
